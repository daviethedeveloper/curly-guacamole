---
title: "Weather Data"
subtitle: "Big Data"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute:
  warning: false
---
```{python}
import polars as pl
import plotly.express as px
import polars as pl
import pandas as pd

pd.set_option('display.max_columns', None)
```

## Data Loading 

```{python}
data = pl.read_csv('sample.csv')
df= data.to_pandas()
```



## Data Exploration/Cleaning

```{python}
df.describe()
```

The provided weather data summary statistics offer a comprehensive overview of various meteorological parameters. The temperature data reveals an average of approximately 21.49 degrees Celsius, with a moderate variability of around 4.05 degrees Celsius. Wind-related metrics showcase an average speed of 10.77 knots, with a notable maximum of 44.64 knots. The visibility readings, averaging around 14.86 miles, suggest generally clear conditions. Additionally, the summary indicates a range of sea level pressure from 995.6 to 1020 millibars, indicating a typical atmospheric pressure spectrum. Notably, the precipitation descriptors and hourly precipitation values exhibit variations, suggesting that precipitation occurred sporadically during the observed period. These insights provide a foundational understanding of the prevailing weather conditions, facilitating further exploration, data cleaning, and potential integration of real-time data for a more comprehensive analysis.




## Utilize Weather Data Columns
```{python}
selected_columns = ['PRECIPITATION_DESCRIPTOR_INTEGER_SEE_LOOKUP_', 'VISIBILITY_FLOATING_POINT_MILES_', 'TEMPERATURE_FLOATING_POINT_CELSIUS_']
weather_df = df[selected_columns]
weather_df.head()
```

The dataset exhibits consistent weather conditions characterized by a constant temperature of 22.0 degrees Celsius and a visibility of 16.09 miles, indicating a period of stability. The absence of precipitation details may limit a comprehensive understanding of potential rain or snowfall, but the observed high visibility and steady temperature are crucial factors for planning and decision-making. Such conditions are favorable for outdoor events, transportation, and various operational activities. This underscores the significance of weather data in ensuring optimal efficiency and safety in diverse sectors, from event planning to transportation logistics.


## Chart from Weather_df
```{python}
fig = px.scatter_3d(weather_df,
                  x='TEMPERATURE_FLOATING_POINT_CELSIUS_',
                  y='VISIBILITY_FLOATING_POINT_MILES_',
                  z='PRECIPITATION_DESCRIPTOR_INTEGER_SEE_LOOKUP_',
                  title='Weather Data Analysis',
                  labels={'TEMPERATURE_FLOATING_POINT_CELSIUS_': 'Temperature (째C)',
                          'VISIBILITY_FLOATING_POINT_MILES_': 'Visibility (Miles)',
                          'PRECIPITATION_DESCRIPTOR_INTEGER_SEE_LOOKUP_': 'Precipitation Descriptor'},
                  color='TEMPERATURE_FLOATING_POINT_CELSIUS_',
                  size='VISIBILITY_FLOATING_POINT_MILES_',
                  opacity=0.7)

fig.update_layout(scene=dict(
                    xaxis_title='Temperature (째C)',
                    yaxis_title='Visibility (Miles)',
                    zaxis_title='Precipitation Descriptor'
                ))

fig.show()

```

The visualization helps identify potential relationships or clusters within the data. For instance, points with similar precipitation descriptors might be grouped together, allowing for insights into the correlation between temperature, visibility, and precipitation conditions. Further analysis and exploration may uncover trends or anomalies in the dataset, providing valuable information for weather-related decision-making or research.


## Map Descriptors (Encoding Categorical Variables)
```{python}

df['SKY_DESCRIPTOR'] = df['SKY_DESCRIPTOR_INTEGER_SEE_LOOKUP_'].map({
    1: 'Clear',
    2: 'Partly Cloudy',
})

df['SKY_DESCRIPTOR'].fillna(method='ffill', inplace=True)

df['SKY_DESCRIPTOR'].head()
```

The provided data suggests a trend in sky conditions, with the majority of observations falling into the categories of "Clear" and "Partly Cloudy." This pattern implies relatively fair and stable weather conditions during the recorded observations. The prevalence of "Clear" sky conditions indicates minimal cloud cover, while "Partly Cloudy" suggests the presence of some clouds in the sky. Such consistent sky conditions can have implications for various activities, including outdoor events and transportation planning. Understanding and monitoring these sky descriptors are crucial for making informed decisions related to weather-dependent operations and ensuring the overall safety and efficiency of various endeavors.


## Create Interaction Features
```{python}

df['Temp*Humidity'] = df['TEMPERATURE_FLOATING_POINT_CELSIUS_'] * df['HUMIDITY_INTEGER_PERCENT_']

```

## Chart:
```{python}
fig = px.scatter(df, x='Temp*Humidity', y='TEMPERATURE_FLOATING_POINT_CELSIUS_', 
                 title='Temperature vs. Temperature*Humidity',
                 labels={'Temp*Humidity': 'Temperature * Humidity', 
                         'TEMPERATURE_FLOATING_POINT_CELSIUS_': 'Temperature (째C)'})

fig.show()
```




## Temperature Distribution:
```{python}
fig = px.histogram(df, x='TEMPERATURE_FLOATING_POINT_CELSIUS_', nbins=20, title='Temperature Distribution')
fig.update_layout(xaxis_title='Temperature (째C)', yaxis_title='Frequency')
fig.show()
```

The generated chart illustrates a positive correlation between the product of temperature and humidity (Temp*Humidity) on the x-axis and the actual temperature (TEMPERATURE_FLOATING_POINT_CELSIUS_) on the y-axis. As the value of Temperature*Humidity increases along the x-axis, there is a noticeable upward trend in the temperature on the y-axis. This positive relationship suggests that higher combined values of temperature and humidity correspond to higher temperatures. Understanding such correlations is valuable for assessing the impact of humidity on temperature and can have implications for various sectors, including climate analysis, risk assessment, and environmental studies. It enables stakeholders to make informed decisions based on the interplay between these weather-related variables.


## Humidity Distribution:
```{python}
fig = px.histogram(df, x='HUMIDITY_INTEGER_PERCENT_', nbins=20, title='Humidity Distribution')
fig.update_layout(xaxis_title='Humidity (%)', yaxis_title='Frequency')
fig.show()
```


The presented histogram depicts the distribution of humidity levels in the dataset, measured in percentage (%). The x-axis represents the humidity values, divided into x bins for a detailed overview, while the y-axis displays the frequency of occurrences. From the chart, it appears that the dataset's humidity distribution is relatively uniform, with values spread across different percentage ranges. This visualization is crucial for gaining insights into the variability and concentration of humidity levels, providing a foundation for understanding the climate conditions covered by the dataset. 
